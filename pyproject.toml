[tool.poetry]
name = "goodmap"
version = "0.1.11"
description = "Map engine to serve all the people :)"
authors = ["Krzysztof Kolodzinski <krzysztof.kolodzinski@problematy.pl>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
Flask = "^2.2.2"
flask-restx = "^1.0.5"
Flask-Babel = "^3.1.0"
Babel = "^2.10.3"
gunicorn = "^20.1.0"
google-cloud-storage = "^2.7.0"
PyYAML = "^6.0"
humanize = "^4.6.0"
flask-wtf = "^1.1.1"
gql = "^3.4.0"
aiohttp = "^3.8.4"
flask-minify = "^0.41"
pydantic = "^1.10.7"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
coverage = "^6.4.3"
coveralls = "^3.3.1"
pyright = "^1.1.291"
freezegun = "^1.2.2"
black = "^23.1.0"
ruff = "^0.0.257"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
pythonVersion = "3.10"
pythonPlatform = "All"

typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false
reportMissingParameterType = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUnknownParameterType = false
reportUnusedFunction = false
reportUnnecessaryTypeIgnoreComment = true
reportUntypedClassDecorator = false
reportUnusedClass = false
reportUntypedBaseClass = false

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.ruff]
line-length = 100
target-version = "py310"
show-fixes = true
select = [
    "I", # isort
    "F", # Pyflakes
    "E", # pycodestyle Error
    "W", # pycodestyle Warning
    "RUF", # Ruff-specific rules
]
ignore = []
