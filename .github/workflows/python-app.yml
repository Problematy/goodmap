name: Good map

on:
  push

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest

  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.14'
    - name: Install dependencies
      run: npm install
    - name: Test with jest
      run: npm test

  deploy:
    needs: [backend-test, frontend-test]
    environment: goodmap_env
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
#TODO: this section should be replaced with another solution (probably separate javascript form python)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.14'
    - name: Install dependencies
      run: npm install
      working-directory: ./frontend
    - name: Build javascript
      run: npm run build
      working-directory: ./frontend
# end of TODO
    - id: auth
      uses: google-github-actions/auth@v0
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
        access_token_lifetime: '300s'
    - name: Prepare config
      run : |
        echo '${{ secrets.CONFIG }}' >config.yml
        echo 'flask_secretkey: ${{ secrets.FLASK_SECRETKEY }}' >> config.yml
    - name: Prepare dependencies
      run : |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
        poetry export -f requirements.txt --output requirements.txt --without-hashes
    - id: deploy
      uses: google-github-actions/deploy-appengine@v0
    - name: Test
      run: curl "${{ steps.deploy.outputs.url }}"
